<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2020 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources>
    <string-array name="words">
        <item>动态规划01:求两数之和</item>
        <item>动态规划02:最长回文子串</item>
        <item>动态规划03:括号配对</item>
        <item>二叉树01</item>
        <item>二叉树02</item>
        <item>二叉树03</item>
        <item>二分01</item>
        <item>二分02</item>
        <item>二分03</item>
        <item>递归01</item>
        <item>递归02</item>
        <item>递归03</item>


    </string-array>
    <string-array name="problems">
        <item>动态规划01:求两数之和:\n
            给定一个整数数组 nums和一个整数目标值 target，请你在该数组中找出 和为目标值 target的那两个整数，并返回它们的数组下标。
            你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现.你可以按任意顺序返回答案。
</item>
        <item>
            动态规划02:最长回文子串\n
            给你一个字符串 s，找到 s 中最长的回文子串。
        </item>
        <item>
            动态规划03:括号配对\n
            数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。
        </item>
        <item>
            二叉树01: 相同的树\n
            给你两棵二叉树的根节点 p 和 q ，编写一个函数来检验这两棵树是否相同。
            如果两个树在结构上相同，并且节点具有相同的值，则认为它们是相同的
        </item>
        <item>
            二叉树02: 轴对称\n
            给你一个二叉树的根节点 root ， 检查它是否轴对称。
        </item>
        <item>
            二叉树03: 左叶子之和\n
            给定二叉树的根节点 root ，返回所有左叶子之和。
        </item>
        <item>
            二分01: 算术平方根\n
            给你一个非负整数 x ，计算并返回 x 的 算术平方根 。由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。
        </item>
        <item>
            二分02:  数组交集\n
            给定两个数组 nums1 和 nums2 ，返回 它们的交集 。输出结果中的每个元素一定是 唯一 的。我们可以 不考虑输出结果的顺序
        </item>
        <item>
            二分03: 数组交集II\n
            给你两个整数数组nums1 和 nums2 ，请你以数组形式返回两数组的交集。返回结果中每个元素出现的次数，
            应与元素在两个数组中都出现的次数一致（如果出现次数不一致，则考虑取较小值）。可以不考虑输出结果的顺序。
        </item>
        <item>
            递归01:链表合并\n
            将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。
        </item>
        <item>
            递归02:两两交换链表节点\n
            给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。
        </item>
        <item>
            递归03:回文链表\n
            给你一个单链表的头节点 head ，请你判断该链表是否为回文链表。如果是，返回 true ；否则，返回 false 。
        </item>
    </string-array>
</resources>